@using stFacturacion.CustomHelpers
@model stFacturacion.Models.Cliente

@{
    ViewBag.Title = "Edit";
}

<div class="alert alert-info">
        <button class="close" data-dismiss="alert">&times;</button>        
        <strong>Atención!</strong> Estás editando los datos personales de un cliente</div>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm("Edit","Clientes",FormMethod.Post,new { @class = "form-horizontal" })) {
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Cliente</legend>

        @Html.HiddenFor(model => model.ClienteId)

        <div class="control-group"> 
            @Html.LabelFor(model => model.nombre, new { @class = "control-label" })
          <div class="controls">
            @Html.EditorFor(model => model.nombre)
            @Html.ValidationMessageFor(model => model.nombre)
          </div>
        </div>

        <div class="control-group"> 
            @Html.LabelFor(model => model.direccion, new { @class = "control-label" })
          <div class="controls">
            @Html.EditorFor(model => model.direccion)
            @Html.ValidationMessageFor(model => model.direccion)
          </div>
        </div>

        <div class="control-group"> 
            @Html.LabelFor(model => model.cp, new { @class = "control-label" })
          <div class="controls">
            @Html.EditorFor(model => model.cp)
            @Html.ValidationMessageFor(model => model.cp)
          </div>
        </div>

        <div class="control-group"> 
            @Html.LabelFor(model => model.ciudad, new { @class = "control-label" })
          <div class="controls">
            @Html.EditorFor(model => model.ciudad)
            @Html.ValidationMessageFor(model => model.ciudad)
          </div>
        </div>

        <div class="control-group"> 
            @Html.LabelFor(model => model.pais, new { @class = "control-label" })
          <div class="controls">
            @Html.EditorFor(model => model.pais)
            @Html.ValidationMessageFor(model => model.pais)
          </div>
        </div>

        <div class="control-group"> 
            @Html.LabelFor(model => model.localidadId, "Localidad", new { @class = "control-label" })
          <div class="controls">
            @Html.DropDownList("localidadId", String.Empty)
            @Html.ValidationMessageFor(model => model.localidadId)
          </div>
        </div>

        <div class="control-group"> 
            @Html.LabelFor(model => model.nif, new { @class = "control-label" })
          <div class="controls">
            @Html.EditorFor(model => model.nif)
            @Html.ValidationMessageFor(model => model.nif)
          </div>
        </div>

        <div class="control-group"> 
            @Html.LabelFor(model => model.tlf, new { @class = "control-label" })
          <div class="controls">
            @Html.EditorFor(model => model.tlf)
            @Html.ValidationMessageFor(model => model.tlf)
          </div>
        </div>

        <div class="control-group"> 
            @Html.LabelFor(model => model.tlfmov, new { @class = "control-label" })
          <div class="controls">
            @Html.EditorFor(model => model.tlfmov)
            @Html.ValidationMessageFor(model => model.tlfmov)
          </div>
        </div>

        <div class="control-group"> 
            @Html.LabelFor(model => model.fax, new { @class = "control-label" })
          <div class="controls">
            @Html.EditorFor(model => model.fax)
            @Html.ValidationMessageFor(model => model.fax)
          </div>
        </div>

        <div class="control-group"> 
            @Html.LabelFor(model => model.web, new { @class = "control-label" })
          <div class="controls">
            @Html.EditorFor(model => model.web)
            @Html.ValidationMessageFor(model => model.web)
          </div>
        </div>

        <div class="control-group"> 
            @Html.LabelFor(model => model.email, new { @class = "control-label" })
          <div class="controls">
            @Html.EditorFor(model => model.email)
            @Html.ValidationMessageFor(model => model.email)
          </div>
        </div>

        <div class="control-group"> 
            @Html.LabelFor(model => model.contacto, new { @class = "control-label" })
          <div class="controls">
            @Html.EditorFor(model => model.contacto)
            @Html.ValidationMessageFor(model => model.contacto)
          </div>
        </div>

        <div class="control-group"> 
            @Html.LabelFor(model => model.Iva, new { @class = "control-label" })
          <div class="controls">
            @Html.EditorFor(model => model.Iva)
            @Html.ValidationMessageFor(model => model.Iva)
          </div>
        </div>

        <div class="control-group"> 
            @Html.LabelFor(model => model.Recargo, new { @class = "control-label" })
          <div class="controls">         
            @Html.EditorFor(model => model.Recargo)
            @Html.ValidationMessageFor(model => model.Recargo)           
          </div>
        </div>

        <div class="control-group"> 
            @Html.LabelFor(model => model.formaPagoid,new { @class = "control-label" })
          <div class="controls">
            @Html.DropDownList("formaPagoid", String.Empty)
            @Html.ValidationMessageFor(model => model.formaPagoid)
           </div>
        </div>

         <div class="form-actions">
            <input type="submit" class="btn btn-primary" value="Crear" />     
           @Html.ActionLink("Cancelar", "Index",null, new { @class = "btn" })
        </div>        
    </fieldset>
}


